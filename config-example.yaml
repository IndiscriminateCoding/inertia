ads:
  host: localhost
  port: 3001
  certificate: ./certificate.pem
  key: ./key.pem

# defaults:
#   # cluster
#   connect-timeout: 5
#   load-balancer:
#     least-request:
#       choice-count: 2
#   circuit-breaker:
#     max-connections: 1024
#     max-pending-requests: 1024
#     max-requests: 1024
#     max-retries: 3
#   outlier-detection:
#     interval: 10
#     base-ejection-time: 30
#     max-ejection-percent: 10
#     consecutive-5xx:
#       num: 5
#       enforcing: 100
#     consecutive-gateway-failure:
#       num: 5
#       enforcing: 0
#     success-rate:
#       minimum-hosts: 5
#       request-volume: 100
#       stdev-factor: 1900
#       enforcing: 100
#     failure-percentage:
#       minimum-hosts: 5
#       request-volume: 50
#       threshold: 85
#       enforcing: 0
#     local-origin:
#       consecutive:
#         num: 5
#         enforcing: 100
#       success-rate:
#         enforcing: 100
#       failure-percentage:
#         enforcing: 100
#   tls:
#     sni: hostname # set auto-sni if this field is missing
#   metadata:
#     key: value
#   tcp-keepalive:
#     probes: 9
#     time: 7200
#     interval: 75

#   # listener and destination
#   http-options:
#     idle-timeout: 600
#     # protocol-selection based on h1/h2 presence
#     h1:
#       accept-http10: false # set default host based on cluster name
#     h2:
#       allow-connect: true

#   # listener
#   server-name: envoy
#   upgrades: [ websocket ]
#   socket-options:
#   - level: 1
#     name: 9
#     value: 1
#     state: listening
#   - level: 6
#     name: 4
#     value: 60
#     state: listening
#   - level: 6
#     name: 5
#     value: 60
#     state: listening

#   # route
#   request-timeout: 3
#   retry-policy:
#     retriable-status-codes: [ 502, 503, 503 ]
#     num-retries: 1
#     per-try-timeout: 1
#     retry-back-off:
#       base-interval-ms: 25
#       max-interval-ms: 250

destinations:
  my-service:
    discovery: static
    hosts:
    - host: 127.0.0.1
      port: 82
    - host: 127.0.0.1
      port: 83
    connect-timeout: 333ms
    load-balancer:
      round-robin: {}
  google:
    discovery: strict-dns
    hosts:
      host: google.com
      port: 80

listeners:
  default:
    host: 0.0.0.0
    port: 9000
    http:
    - when:
        authority: { value: google.com }
      then:
        # conditions could be nested
      - when:
          path: { prefix: /search }
        then:
        - destination: google
    - when:
        all:
        - method: { value: GET }
        - path:
            prefix: /my-svc/
        - not:
            header:
              name: x-route-to
              prefix: 'proxy-'
      then:
        # you could omit array when using single element
        destination: my-service
